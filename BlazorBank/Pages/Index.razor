@page "/"

<PageTitle>Start</PageTitle>

@* <link rel="stylesheet" href="StyleSheet.css" /> *@

@* <link href="StyleSheet.css" rel="stylesheet" /> *@

<style>
    h2 {
        position: absolute;
        background-color: lightgray;
        width: 90%;
    }


    #cardPile2 {
        position: absolute;
        background-color: lightgoldenrodyellow;
        width: 200px;
        top: 90.3%;
        left: 50%;
    }

    #cardPile1 {
        position: absolute;
        background-color: lightgoldenrodyellow;
        width: 200px;
        bottom: 90%;
        left: 50%;
    }

    .player2 {
        top: 90%;
    }

    .cardCount {
        position: absolute;
        left: 30px;
        background-color: black;
        color: white;
        border: 2px;
        border-width: 5px;
        border-color: blue;
        padding: 3px;
        z-index: 1;
        top: 40%;
    }

    #two {
        left: 30%;
    }

    #three {
        left: 45%;
    }

    #four {
        left: 70%;
    }

    #five {
        left: 85%;
    }

    img {
        transform: rotate(90deg);
        position: relative;
        top: 360px;
        left: 2%;
    }

    .img2 {
        left: 12%;
    }

    .img3 {
        left: 22%;
    }

    .img4 {
        left: 32%;
    }

    .img5 {
        left: 42%;
        transform: rotate(0deg);
    }

    .start {
        height: 100px;
        font-size: xx-large;
    }

    .direction {
        text-decoration: underline;
    }

    button {
        border-color: black;
        background-color: salmon;
        position: relative;
        left: 32%;
        width: 40%;
    }

    button:hover {
        border-width: 3px;
        border-right: 1px;
        border-bottom: 1px;
    }

    .set {
        font-size: large;
    }

    .info {
        background-color: lightgray;
        border-color: grey;
        padding: 5px;
        border-radius: 3px;
        font-size: large;
        text-align: center;
    }

    .warning {
        background-color: red;
        text-align: center;
        position: relative;
        left: 38%;
        width: 580px;
        border-radius: 3px;
        padding: 5px;
        text-shadow: 5px;
    }

    h1 {
        text-align: center;
    }

    .popUpCards {
        transform: rotate(0);
        position: absolute;
        top: 200px;
        left: 2%;
        z-index: 2;
    }

    #d1 {
        left: 15%;
    }

    #d2 {
        left: 28%;
    }

    #d3 {
        left: 41%;
    }

    #d4 {
        left: 54%;
    }

    #d5 {
        left: 67%;
    }

    #d6 {
        left: 80%;
    }

    #d7 {
        top: 580px;
        left: 2%;
    }

    #d8 {
        top: 580px;
        left: 15%;
    }

    #d9 {
        top: 580px;
        left: 28%;
    }

    #d10 {
        top: 580px;
        left: 41%;
    }

    #d11 {
        top: 580px;
        left: 54%;
    }

    #d12 {
        top: 580px;
        left: 67%;
    }

    #d13 {
        top: 580px;
        left: 80%;
    }

    .square {
        position: absolute;
        top: 0%;
        left: 0%;
        width: 100%;
        height: 100%;
        background-color: #777;
        z-index: 1.9;
        opacity: 40%;
    }
</style>

@if (page1 == true)
{
    <h1>Welcome to MTG Winston</h1>

    <br>
    <br>
    <button type="button" @onclick="NextPage" class="start">Start</button>
    <br>
    <br>
    <button @onclick="ShowInfo">Show More Information</button>
    <br>
    <br>

    @* @if (ListOfImgUrls != null)
        {
        foreach (var item in ListOfImgUrls)
        {
        <img src="@item" />
        }
        } *@

    @* <img @onload="ShowImage" src="imageSource" alt="ATimageSource" />
        <img @onload="Window_Loaded" src="imageSource" alt="ATimageSource.5" />
        <img @onload="ShowImage" src="@imageSource" alt="ATimageSource1" />
        <img src="@imageSource" alt="ATimageSource2" /> *@

    @* @if (imageSource is not null)
        {
        <div>
        <img src="@imageSource" />
        </div>
        }
        @for (var i = 1; i <= 3; i++)
        {
        var imageId = i;
        <button @onclick="() => ShowImage()">
        Image @imageSource
        </button>
        } *@
    @* <input @onload="Window_Loaded"></input> *@


    @if (wantInfo == true)
    {
        <br>
        <br>
        <p class="info">
            Winston draft is a way to draft six Magic the Gathering booster packs between two people. This website is looking
            to let two players in the same room do this winston draft, download, and then import to MTG Arena.
        </p>
    }

}
else if (page2 == true)
{
    <h1>Pick your packs</h1>
    <h3 class="direction">Choose your six packs</h3>

    <p class="set">Kamigawa: Neon Dynisty: <input type="number" name="NEO" min="0" max="6" @bind="NEO"></p>
    <br>
    <br>
    <p class="set">War of the Spark: <input type="number" name="WAR" min="0" max="6" @bind="WAR"></p>
    <br>
    <br>
    <p class="set">Dominaria: <input type="number" name="DOM" min="0" max="6" @bind="DOM"></p>
    <br>
    <br>
    <button class="start" @onclick="Start">Start</button>
    <br>
    <br>
    @if (check == false)
    {
        <h3 class="warning">You have to have <strong>six</strong> packs to start</h3>
    }
}
else if (page3 == true)
{
    <h2 class="player1">Player 1</h2>
    <div>
        <p class="cardCount">@pile1</p>
        <p class="cardCount" id="two">@pile2</p>
        <p class="cardCount" id="three">@pile3</p>
        <p class="cardCount" id="four">@pile4</p>
        <p class="cardCount" id="five">@deckAmount</p>
        <p>
            <img src="https://media.magic.wizards.com/image_legacy_migration/magic/images/mtgcom/fcpics/making/mr224_back.jpg"
            alt="Back of a Magic card" @onclick="ShowCard" width="10%" height="10%" class="img1">
            <img src="https://media.magic.wizards.com/image_legacy_migration/magic/images/mtgcom/fcpics/making/mr224_back.jpg"
            alt="Back of a Magic card" @onclick="ShowCard" width="10%" height="10%" class="img2">
            <img src="https://media.magic.wizards.com/image_legacy_migration/magic/images/mtgcom/fcpics/making/mr224_back.jpg"
            alt="Back of a Magic card" @onclick="ShowCard" width="10%" height="10%" class="img3">
            <img src="https://media.magic.wizards.com/image_legacy_migration/magic/images/mtgcom/fcpics/making/mr224_back.jpg"
            alt="Back of a Magic card" @onclick="ShowCard" width="10%" height="10%" class="img4">
            <img src="https://media.magic.wizards.com/image_legacy_migration/magic/images/mtgcom/fcpics/making/mr224_back.jpg"
            alt="Back of a Magic card" @onclick="ShowCard" width="10%" height="10%" class="img5">
        </p>
    </div>

    @if (popUpCards == true)
    {
        <div class="square"></div>

        int i = 0;
        foreach (var item in ListOfImgUrls)
        {
            string id = "d" + i.ToString();
            <img class="popUpCards" src="@item" id="@id" />
            i++;
        }
    }

    <h2 class="player2">Player 2</h2>
    <button id="cardPile1">Show drafted cards (@player1CardCount)</button>
    <button id="cardPile2">Show drafted cards (@player2CardCount)</button>
}
@code {
    int player1CardCount;
    int player2CardCount;
    int deckAmount = 64;
    int pile1 = 1;
    int pile2 = 1;
    int pile3 = 1;
    int pile4 = 1;
    bool wantInfo = false;
    bool page1 = true;
    bool page2 = false;
    bool page3 = false;
    bool popUpCards = false;

    public void NextPage()
    {
        wantInfo = false;
        page1 = false;
        page2 = true;
    }
    int NEO;
    int WAR;
    int DOM;
    bool check = true;

    public void Start()
    {
        check = true;
        if (NEO + WAR + DOM != 6)
        {
            check = false;
        }
        else
        {
            page2 = false;
            page3 = true;
        }
    }

    public List<string> ListOfImgUrls = new List<string>();

    public async void ShowInfo()
    {
        wantInfo = true;
    }

    //foreach (var item in await booster.booster) PrintingImage(item);
    public async void ShowCard()
    {
        popUpCards = true;
        Winston.MakeBooster.ApiHelper.InitializeClient();
        Winston.MakeBooster booster = new Winston.MakeBooster(Winston.Set.NEO);
        PrintingImage(await booster.singleCard);
    }

    public async void PrintingImage(Winston.CardModel card)
    {
        ListOfImgUrls.Add(card.ImageUrl);
    }

    private string? imageSource;
    public async Task ShowImage()
    {
        var card = await Winston.CardProcessor.LoadNonLand(Winston.Set.WAR, Winston.Rarity.uncommon);

        var uriSource = new Uri(card.ImageUrl, UriKind.Absolute);

        imageSource = uriSource.ToString();
    }

    private async void Window_Loaded()
    {
        await ShowImage();
    }
}